freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.15) + 0.1
l2 = runif(3, 0, 0.15) + 0.2     # 75
l3 = 0.25
l4_8 = seq(0.4, 0.8, 0.1) + runif(5, 0, 0.1) # 81
l_up = seq(3,5,0.5)
l7 = seq(7, 12, 0.5) + runif(11, 0, 0.2)    # 85 - 97
l8 = seq(10, 4, -0.5) + runif(13, 0, 0.1) # 98 - 102
l_down = seq(1, 0.5, -0.5)
l9 = runif(1, 0, 0.05) + 0.1
l10 = runif(1, 0, 0.05) + 0.1
upper_tail = runif(5, 0, 0.05); # 114-120
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, l_down, l9, l10, upper_tail)
length(result)
length(seq(10, 4, -0.5) + runif(13, 0, 0.1))
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.15) + 0.1
l2 = runif(3, 0, 0.15) + 0.2     # 75
l3 = 0.25
l4_8 = seq(0.4, 0.8, 0.1) + runif(5, 0, 0.1) # 81
l_up = seq(3,5,0.5)
l7 = seq(7, 12, 0.5) + runif(11, 0, 0.2)    # 85 - 97
l8 = seq(10, 7, -0.5) + runif(13, 0, 0.1) # 98 - 110
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8)
length(result)
length(seq(10, 7, -0.5))
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.15) + 0.1
l2 = runif(3, 0, 0.15) + 0.2     # 75
l3 = 0.25
l4_8 = seq(0.4, 0.8, 0.1) + runif(5, 0, 0.1) # 81
l_up = seq(3,5,0.5)
l7 = seq(7, 12, 0.5) + runif(11, 0, 0.2)    # 85 - 97
l8 = seq(10, 7, -0.5) + runif(7, 0, 0.1) # 98 - 110
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8)
length(result)
length(seq(4, 2, -0.5))
ll = seq(4, 2, -0.5)
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, ll)
length(result)
l_down = seq(1, 0.5, -0.5)
l9 = runif(1, 0, 0.05) + 0.1
l10 = runif(1, 0, 0.05) + 0.1
upper_tail = runif(5, 0, 0.05); # 116-120
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, ll, l_down, l9, l10, upper_tail)
length(result)
upper_tail = runif(7, 0, 0.05); # 116-120
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, ll, l_down, l9, l10, upper_tail)
length(result)
plen_dist = data.frame(walk = 1:120, result)
plen_dist = plen_dist %>% mutate(occ = round(result * 100))
freq = c()
for (i in walk) {
freq_i = rep(i, plen_dist$occ[i])
freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.15) + 0.1
l2 = runif(3, 0, 0.15) + 0.2     # 75
l3 = 0.25
l4_8 = seq(0.4, 0.8, 0.1) + runif(5, 0, 0.1) # 81
l_up = seq(3,5,0.5)
l7 = seq(7, 12, 0.5) + runif(11, 0, 0.2)    # 85 - 97
l8 = seq(10, 7, -0.5) + runif(7, 0, 0.05) # 98 - 110
length(seq(4, 2, -0.5))
ll = seq(4, 2, -0.5)
l_down = seq(1, 0.5, -0.5)
l9 = runif(1, 0, 0.05) + 0.1
l10 = runif(1, 0, 0.05) + 0.1
upper_tail = runif(7, 0, 0.05); # 116-120
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, ll, l_down, l9, l10, upper_tail)
length(result)
plen_dist = data.frame(walk = 1:120, result)
plen_dist = plen_dist %>% mutate(occ = round(result * 100))
freq = c()
for (i in walk) {
freq_i = rep(i, plen_dist$occ[i])
freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.15) + 0.1
l2 = runif(3, 0, 0.15) + 0.2     # 75
l3 = 0.25
l4_8 = seq(0.4, 0.8, 0.1) + runif(5, 0, 0.05) # 81
l_up = seq(3,5,0.5)
l7 = seq(7, 12, 0.5) + runif(11, 0, 0.2)    # 85 - 97
l8 = seq(10, 7, -0.5) + runif(7, 0, 0.05) # 98 - 110
length(seq(4, 2, -0.5))
ll = seq(4, 2, -0.5)
l_down = seq(1, 0.5, -0.5)
l9 = runif(1, 0, 0.05) + 0.1
l10 = runif(1, 0, 0.05) + 0.1
upper_tail = runif(7, 0, 0.05); # 116-120
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, ll, l_down, l9, l10, upper_tail)
length(result)
plen_dist = data.frame(walk = 1:120, result)
plen_dist = plen_dist %>% mutate(occ = round(result * 100))
freq = c()
for (i in walk) {
freq_i = rep(i, plen_dist$occ[i])
freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
ion
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.15) + 0.1
l2 = runif(3, 0, 0.15) + 0.2     # 75
l3 = 0.25
l4_8 = seq(0.4, 0.8, 0.1) + runif(5, 0, 0.05) # 81
l_up = seq(3,5,0.5)
l7 = seq(7, 12, 0.5) + runif(11, 0, 0.05)    # 85 - 97
l8 = seq(10, 7, -0.5) + runif(7, 0, 0.05) # 98 - 110
length(seq(4, 2, -0.5))
ll = seq(4, 2, -0.5)
l_down = seq(1, 0.5, -0.5)
l9 = runif(1, 0, 0.05) + 0.1
l10 = runif(1, 0, 0.05) + 0.1
upper_tail = runif(7, 0, 0.05); # 116-120
result = c(lower_tail, l1, l2, l3, l4_8, l_up,
l7, l8, ll, l_down, l9, l10, upper_tail)
length(result)
plen_dist = data.frame(walk = 1:120, result)
plen_dist = plen_dist %>% mutate(occ = round(result * 100))
freq = c()
for (i in walk) {
freq_i = rep(i, plen_dist$occ[i])
freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
lower_tail = runif(70, 0, 0.05); # 0 - 70
l1 = runif(2, 0, 0.25) + 0.1
l2 = runif(3, 0, 0.25) + 0.2     # 75
l3 = 0.25
l4 = 1 + runif(1, 0, 0.1)
l5 = 2 + runif(1, 0, 0.1)
l6 = 3 + runif(1, 0, 0.1)
l7 = 4:9    # 80-85
#l8 = 8:4    # 86-90
l8 = c(10, 8, 6, 4, 3) + runif(5, 0, 0.1)
upper_tail = runif(25, 0, 0.05); # 95-120
result = c(lower_tail, l1, l2, l3, l4, l5,
l6, l7, l8, l2, l1, upper_tail);
plen_dist = data.frame(walk = 1:120, result)
plen_dist = plen_dist %>% mutate(occ = round(result * 100))
freq = c()
for (i in walk) {
freq_i = rep(i, plen_dist$occ[i])
freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
freq_small1 = runif(70, 0, 0.01)
freq_med = runif(4, 0, 0.1) + 0.05
freq_large1 = runif(6, 0, 0.25) + 0.2 # 80
freq_large11 = runif(2, 0, 0.3) + 1
freq_large111 = runif(3, 0, 0.3) + 2
freq_large1111 = runif(3, 0, 0.3) + 3
freq_large11111 = runif(1, 0, 0.3) + 4
freq_large111111 = runif(1, 0, 0.5) + 9 ## 90
freq_largest = runif(1, 0, 0.25) + 8.5
freq_largest1 = runif(1, 0, 0.25) + 8.3
freq_large22 = runif(1, 0, 0.25) + 7.5
freq_large222 = runif(2, 0, 0.1) + 6.5 # 98
freq_large2222 = runif(2, 0, 0.1) + 6 # 98
freq_small2 = runif(3, 0, 0.5) + 3     # 104
freq_endsmall = runif(3, 0, 0.1) + 2
freq_endsmall1 = runif(2, 0, 0.1) + 1.5
freq_endsmall11 = runif(6, 0, 0.1) + 0.2
freq_small = runif(9, 0, 0.05)
result = c(freq_small1, freq_med, freq_large1,
freq_large11, freq_large111, freq_large1111,
freq_large11111, freq_large111111,
freq_largest, freq_largest1,
freq_large22, freq_large222, freq_large2222, freq_small2,
freq_endsmall, freq_endsmall1, freq_endsmall11,
freq_small)
walk = 1:120
plen_dist = data.frame(walk, result)
plen_dist = plen_dist %>% mutate(occ = round(result * 100))
freq = c()
for (i in walk) {
freq_i = rep(i, plen_dist$occ[i])
freq = c(freq, freq_i)
}
freq = data.frame(freq)
ggplot(freq, aes(x = freq)) + geom_histogram(binwidth = 1)
ggplot(freq, aes(x = freq)) + geom_density() +
scale_x_continuous(breaks=seq(10, 120, 10))
design_1 = read.csv("d1_path_lengths.csv", header = FALSE);
path_1_r = read.csv("d1_path_rows.csv", header = FALSE);
path_1_c = read.csv("d1_path_cols.csv", header = FALSE);
processPaths(path_1_r, path_1_c)
design_2 = read.csv("d2_path_lengths.csv", header = FALSE);
path_2_r = read.csv("d2_path_rows.csv", header = FALSE);
path_2_c = read.csv("d2_path_cols.csv", header = FALSE);
processPaths(path_2_r, path_2_c)
if (1 == 0) {
iter = c()
for (n in (1:50)) {
rate = 0.16
#print(floor(10^(rate * n)))
iter = c(iter, floor(10^(rate * n)))
}
}
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1)
saw_long = melt(saw, id="iter")
plotSAW(saw_long)
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1)
dim(d1)
dim(design_1)
iter
iter = c()
for (n in (1:50)) {
rate = 0.16
#print(floor(10^(rate * n)))
iter = c(iter, floor(10^(rate * n)))
}
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1,
d3 = design_3$V1)
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1)
saw_long = melt(saw, id="iter")
iter = c()
for (n in (1:50)) {
rate = 0.16
#print(floor(10^(rate * n)))
iter = c(iter, floor(10^(rate * n)))
}
length(iter)
length(design_1$V1)
dim(design_2)
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1)
saw_long = melt(saw, id="iter")
plotSAW(saw_long)
design_1 = read.csv("d1_path_lengths.csv", header = FALSE);
path_1_r = read.csv("d1_path_rows.csv", header = FALSE);
path_1_c = read.csv("d1_path_cols.csv", header = FALSE);
processPaths(path_1_r, path_1_c)
design_2 = read.csv("d2_path_lengths.csv", header = FALSE);
path_2_r = read.csv("d2_path_rows.csv", header = FALSE);
path_2_c = read.csv("d2_path_cols.csv", header = FALSE);
processPaths(path_2_r, path_2_c)
iter = c()
for (n in (1:50)) {
rate = 0.16
#print(floor(10^(rate * n)))
iter = c(iter, floor(10^(rate * n)))
}
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1,
d3 = design_3$V1)
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1)
saw_long = melt(saw, id="iter")
plotSAW(saw_long)
t1 = read.csv("theta1.csv")
setwd("~/proj_1")
t1 = read.csv("theta1.csv")
View(t1)
t2 = read.csv("theta2.csv")
t3 = read.csv("theat3.csv")
t3 = read.csv("theta3.csv")
t1 = read.csv("theta1.csv", header = FALSE)
t2 = read.csv("theta2.csv", header = FALSE)
t3 = read.csv("theta3.csv", header = FALSE)
thetas = data.frame(t1 = t1$V1, t2 = t2$V1, t3 = t3$V1)
View(thetas)
library(reshape)
thetas = data.frame(n = 1:41, t1 = t1$V1, t2 = t2$V1, t3 = t3$V1)
x = seq(0, 8, by = 0.2)
x
10^x
thetas = data.frame(n = 10^x, t1 = t1$V1, t2 = t2$V1, t3 = t3$V1)
View(thetas)
long_thetas = melt(thetas, id = "n")
View(long_thetas)
ggplot(long_thetas, aes(x = log(n), y = log(value), colour = variable)) +
geom_point() + geom_line()
ggplot(long_thetas, aes(x = log(n), y = value, colour = variable)) +
geom_point() + geom_line()
ggplot(long_thetas, aes(x = log(n), y = value, colour = variable)) +
geom_point() + geom_line() +
labs(x = "log(iterations)", y = "Error", "Comparing different reference probabilities")
ggplot(long_thetas, aes(x = log(n), y = value, colour = variable)) +
geom_point() + geom_line() +
labs(x = "log(iterations)", y = "Error",
title = "Comparing different reference probabilities")
ggplot(long_thetas, aes(x = log(n), y = value, colour = variable)) +
geom_point() + geom_line() +
labs(x = "log(iterations)", y = "Error") + guides(fill = FALSE)
ggplot(long_thetas, aes(x = log(n), y = value, colour = variable)) +
geom_point() + geom_line() +
labs(x = "log(iterations)", y = "Error") + guides(fill = FALSE)
setwd("~/MCMC/proj_1")
setwd("~MCMC/proj_1/final_design_results/90 iterations")
setwd("~/MCMC/proj_1/final_design_results/90 iterations")
plotSAW = function(saw_data) {
ggplot(saw_data, aes(x = log(iter, 10), y = log(value, 10))) +
geom_point(aes(colour = variable)) + geom_line(aes(colour = variable)) +
labs(title = "Number of SAWs vs. Number of Samples",
x = "Samples", y = "# of SAWs") +
scale_x_continuous(breaks = log(c(10^0, 10^1, 10^2, 10^3, 10^4,
10^5, 10^6, 10^7, 10^8), 10))
}
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "red"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = ""))
}
# read in data
design_1 = read.csv("d1_path_lengths.csv", header = FALSE);
path_1_r = read.csv("d1_path_rows.csv", header = FALSE);
path_1_c = read.csv("d1_path_cols.csv", header = FALSE);
processPaths(path_1_r, path_1_c)
design_2 = read.csv("d2_path_lengths.csv", header = FALSE);
path_2_r = read.csv("d2_path_rows.csv", header = FALSE);
path_2_c = read.csv("d2_path_cols.csv", header = FALSE);
processPaths(path_2_r, path_2_c)
design_3 = read.csv("d3_path_lengths.csv", header = FALSE);
path_3_r = read.csv("d3_path_rows.csv", header = FALSE);
path_3_c = read.csv("d3_path_cols.csv", header = FALSE);
processPaths(path_3_r, path_3_c)
iter = c()
for (n in (1:90)) {
rate = 0.09
print(floor(10^(rate * n)))
iter = c(iter, floor(10^(rate * n)))
}
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1,
d3 = design_3$V1)
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1)
saw_long = melt(saw, id="iter")
plotSAW(saw_long)
saw = data.frame(iter, d1 = design_1$V1, d2 = design_2$V1,
d3 = design_3$V1)
saw_long = melt(saw, id="iter")
plotSAW(saw_long)
View(design2)
View(design_2)
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "red"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(1:10)) +
scale_y_continuous(breaks = c(1:10)
}
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "red"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(1:10)) +
scale_y_continuous(breaks = c(1:10))
}
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "red"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_1_r, path_1_c)
processPaths(path_2_r, path_2_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "blue"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "blue"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(fill = "blue"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_2_r, path_2_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(aes(colour = "green"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col, colour = "blue")) +
geom_path(aes(colour = "green"), size = 2) +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(size = 2, colour = "blue") +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
processPaths(path_1_r, path_1_c)
setwd("~/MCMC/proj_1")
design_1 = read.csv("d1_path_lengths.csv", header = FALSE);
path_1_r = read.csv("d1_path_rows.csv", header = FALSE);
path_1_c = read.csv("d1_path_cols.csv", header = FALSE);
dim(design)
dim(design_1)
processPaths(path_1_r, path_1_c)
processPaths = function(p_rows, p_cols) {
path_length = dim(p_rows)[1] - 1; ## starting point doesn't count
grid_pts = data.frame(p_rows, p_cols)
names(grid_pts) = c("row", "col");
## generate the longest SAW
ggplot(grid_pts, aes(x = row, y = col)) +
geom_path(size = 2, colour = "red") +
labs(x = "", y = "",
title = paste("SAW (length = ", path_length, ")", sep = "")) +
scale_x_continuous(breaks = c(0:10)) +
scale_y_continuous(breaks = c(0:10))
}
design_2 = read.csv("d2_path_lengths.csv", header = FALSE);
path_2_r = read.csv("d2_path_rows.csv", header = FALSE);
path_2_c = read.csv("d2_path_cols.csv", header = FALSE);
processPaths(path_2_r, path_2_c)
